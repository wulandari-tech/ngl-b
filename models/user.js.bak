// models/user.js
const mongoose = require('mongoose');
const bcrypt = require('bcrypt');

const userSchema = new mongoose.Schema({
    username: {
        type: String,
        required: true,
        unique: true,
        lowercase: true,
        trim: true,
        index: true // Indeks untuk pencarian cepat
    },
    password: {
        type: String,
        required: true
    },
    // TAMBAHKAN FIELD INI:
    prompt: {
        type: String,
        trim: true,
        default: "kirimi saya pesan gabut anda" // Nilai default
    },
    profilePictureUrl: {
        type: String,
        trim: true,
        default: "https://via.placeholder.com/40" // URL gambar default/placeholder
    }
}, { timestamps: true }); // Tambahkan timestamps otomatis

// Hash password sebelum menyimpan
userSchema.pre('save', async function(next) {
    if (!this.isModified('password')) return next();
    try {
        const salt = await bcrypt.genSalt(10);
        this.password = await bcrypt.hash(this.password, salt);
        next();
    } catch (error) {
        next(error);
    }
});

// Metode untuk membandingkan password
userSchema.methods.comparePassword = function(candidatePassword) {
    return bcrypt.compare(candidatePassword, this.password);
};

module.exports = mongoose.model('User', userSchema);